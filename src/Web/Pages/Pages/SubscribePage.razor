@page "/subscribe"
@attribute [Authorize]
@implements IDisposable
@inject IPodcastService PodcastService
@inject IJSRuntime jsRuntime
@inject NavigationManager NavigationManager

<PageTitle>.AISleepod - Subscription</PageTitle>

<div class="subscription-content">
	@if (isLoaded)
	{
		<div id="pricing" class="pricing-content section-padding">
			<div class="container">
				<div class="section-title py-2 text-center">
					<span class="fs-2">For those who want to listen and read without limits.</span>
				</div>
				<div class="row text-center mt-2">
					<div class="col-lg-6 col-sm-6 col-xs-12 wow fadeInUp" data-wow-duration="1s" data-wow-delay="0.2s"
						 data-wow-offset="0">
						<div class="single-pricing">
							<div class="price-head">
								<h2>Standard</h2>
								<span></span>
								<span></span>
								<span></span>
								<span></span>
								<span></span>
								<span></span>
							</div>
							@if (currentSubscription == "Standard")
							{
								<span class="plan-label">Current Plan</span>
							}
							<span class="price">$9</span>
							<h5>Annually</h5>
							<ul>
								<li>Unlimited listing to over 500+ available podcasts for less than 1 $ a month!</li>
							</ul>
							<span class="subscription-button" @onclick="@(e => CheckoutHandler("Standard"))">
								@(@currentSubscription == "Standard" ? "Cancel" : "Get started")
							</span>
						</div>
					</div>
					<div class="col-lg-6 col-sm-6 col-xs-12 wow fadeInUp" data-wow-duration="1s" data-wow-delay="0.3s"
						 data-wow-offset="0">
						<div class="single-pricing single-pricing-white">
							<div class="price-head">
								<h2>Premium</h2>
								<span></span>
								<span></span>
								<span></span>
								<span></span>
								<span></span>
								<span></span>
							</div>
							@if (currentSubscription == "Premium")
							{
								<span class="plan-label">Current Plan</span>
							}
							<span class="price-label">Best</span>
							<span class="price">$19</span>
							<h5>Annually</h5>
							<ul>
								<li>Unlimited listing to all our 1000+ available podcasts including access to our premium adult content featuring themes like Passion, Romance, Sex and more….</li>
							</ul>
							<span class="subscription-button" @onclick="@(e => CheckoutHandler("Premium"))">
								@(@currentSubscription == "Premium" ? "Cancel" : "Get started")
							</span>
						</div>
					</div>
				</div>
				<span class="mt-3 text-center">@errorMessage</span>

				@if (cancelSubcription && !String.IsNullOrEmpty(currentSubscription))
				{
					<Modal OnClose="@OnClose">
						<CancelSubscriptionForm OnCancelSubscription="@OnCancelSubscription" />
					</Modal>
				}

			</div>
		</div>
	}
	else
	{
		<Spinner />
	}

    <svg class="sidebar-image" width="294" height="284" viewBox="0 0 294 284" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path class="sidebar-image-path" fill-rule="evenodd" clip-rule="evenodd" d="M84.6487 10.895C87.3273 2.51365 96.3123 -2.15056 104.536 0.978041C145.147 16.427 181.894 40.7123 212.077 72.1498C245.944 107.424 270.478 150.59 283.456 197.737C296.435 244.884 297.448 294.523 286.405 342.161C276.563 384.616 257.421 424.286 230.438 458.342C224.974 465.239 214.868 465.83 208.277 460C201.687 454.17 201.112 444.13 206.531 437.198C230.027 407.138 246.719 372.257 255.364 334.965C265.21 292.49 264.307 248.231 252.735 206.193C241.163 164.156 219.288 125.669 189.092 94.2179C162.58 66.6041 130.388 45.1793 94.8182 31.379C86.615 28.1963 81.9701 19.2764 84.6487 10.895ZM79.4918 130.036C71.7198 125.797 62.2575 129.653 58.7872 137.798C55.3168 145.942 59.168 155.277 66.8399 159.695C78.3253 166.309 88.7916 174.606 97.8793 184.334C110.624 197.978 120.375 214.134 126.508 231.768C132.641 249.402 135.019 268.123 133.491 286.73C132.401 299.998 129.342 312.999 124.439 325.312C121.164 333.537 123.937 343.247 131.712 347.481C139.487 351.714 149.3 348.867 152.765 340.72C159.696 324.417 163.987 307.078 165.443 289.354C167.337 266.293 164.389 243.091 156.788 221.237C149.188 199.382 137.102 179.358 121.307 162.45C109.168 149.454 95.0434 138.519 79.4918 130.036ZM-110.106 73.6053C-118.103 77.9527 -120.313 88.2025 -115.404 95.8675C-110.496 103.533 -100.331 105.7 -92.2826 101.449C-68.2547 88.7558 -41.8066 81.1378 -14.5867 79.1432C18.1249 76.7462 52.595 79.2933 82.4997 92.7655C112.404 106.238 136.799 130.21 156.677 156.299C173.218 178.008 185.036 202.866 191.449 229.272C193.597 238.117 201.956 244.295 210.949 242.893C219.943 241.49 226.156 233.044 224.114 224.174C216.788 192.355 202.76 162.394 182.895 136.323C159.694 105.873 129.264 81.6908 94.3612 65.9665C59.458 50.2423 21.1838 43.4725 -16.9955 46.2702C-49.6847 48.6656 -81.4203 58.0098 -110.106 73.6053ZM-100.764 259.931C-102.127 268.605 -94.8822 275.766 -86.102 275.766C-77.3217 275.766 -70.3831 268.559 -68.4115 260.003C-65.942 249.286 -60.971 239.223 -53.8128 230.679C-43.2244 218.042 -28.5259 209.533 -12.2934 206.646C3.93911 203.759 20.6699 206.677 34.9666 214.889C44.6317 220.441 52.7675 228.172 58.7809 237.381C63.5818 244.732 72.5799 249.104 80.8216 246.077C89.0634 243.05 93.3947 233.83 89.1245 226.158C80.163 210.058 66.9525 196.594 50.8032 187.318C30.0315 175.387 5.72317 171.147 -17.8612 175.342C-41.4455 179.536 -62.8012 191.898 -78.1852 210.259C-90.1456 224.535 -97.9032 241.729 -100.764 259.931Z" fill="#F3F2F1" />
    </svg>
</div>

@code {	

	private string? errorMessage;

	private string? currentSubscription;

	private bool isLoaded = false;
	private bool cancelSubcription = false;

	protected async override void OnInitialized()
	{
		isLoaded = false;

		currentSubscription = await PodcastService.GetCurrentSubscription();

		isLoaded = true;

		StateHasChanged();
	}

	private async Task CheckoutHandler(string subscription)
	{
		if (subscription == currentSubscription)
		{
			cancelSubcription = true;
		}
		else
		{
			var (result, message) = await PodcastService.Checkout(subscription);

			if (result)
			{
				await jsRuntime.InvokeVoidAsync("redirectToCheckout", message);
			}
			else
			{
				errorMessage = message;
			}
		}
	}

	private void OnClose()
	{

	}

	private async Task OnCancelSubscription(bool cancel)
	{
		cancelSubcription = false;

		if (cancel)
		{
			var result = await PodcastService.CancelSubscription();

			if (!String.IsNullOrEmpty(result))
			{
				OnInitialized();
			}
		}
	}

    public void Dispose()
    {
		
    }
}
